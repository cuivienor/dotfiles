#!/usr/bin/env bash

# Shamelessly lifted from prime https://github.com/ThePrimeagen/tmux-sessionizer
# Tweaked using https://github.com/27medkamal/tmux-session-wizard/ as extra inspiration

switch_to() {
	if [[ -z $TMUX ]]; then
		tmux attach-session -t "$1"
	else
		tmux switch-client -t "$1"
	fi
}
has_session() {
	tmux list-sessions | grep -q "^$1:"
}

tmux_init() {
	if [ -f "$2/.t" ]; then
		tmux send-keys -t "$1" "source $2/.t" c-M
	elif [ -f "$HOME/.t" ]; then
		tmux send-keys -t "$1" "source $HOME/.t" c-M
	fi
}

# Function to find project directories
find_projects() {
	{
		# Shallow search in ~ and ~/dev (1 level deep, exclude hidden dirs)
		# Look for git repos at this level
		[[ -d "$HOME/dev" ]] && fd -t d -d 2 -H '^\.git$' . "$HOME/dev" 2>/dev/null | while read -r git_dir; do
			echo "$(dirname "$git_dir")"
		done
		
		fd -t d -d 2 -H '^\.git$' . "$HOME" 2>/dev/null | while read -r git_dir; do
			echo "$(dirname "$git_dir")"
		done
		
		# Search in src directories for git repositories at project level
		local src_dirs=("$HOME/src" "$HOME/dev/src" "$HOME/work/src")
		for src_dir in "${src_dirs[@]}"; do
			if [[ -d "$src_dir" ]]; then
				# Find git repositories - limit depth to avoid going too deep into project subdirectories
				fd -t d -d 4 -H '^\.git$' . "$src_dir" 2>/dev/null | while read -r git_dir; do
					project_dir=$(dirname "$git_dir")
					# Calculate depth from src_dir to ensure we only get top-level projects
					relative_path=${project_dir#$src_dir/}
					depth=$(echo "$relative_path" | tr '/' '\n' | wc -l)
					# Only include projects at reasonable depth (1-3 levels: direct, org/repo, or host/org/repo)
					if [[ $depth -le 3 ]]; then
						echo "$project_dir"
					fi
				done
			fi
		done
	} | sort -u
}

if [[ $# -eq 1 ]]; then
	if [ -d "$1" ]; then
		selected=$(realpath "$1")
	else
		selected=$(_ZO_FZF_OPTS="--tmux=center" zoxide query --interactive "$1")
	fi
else
	selected="$(find_projects | sort -u | fzf --tmux=center)"
fi

if [[ -z $selected ]]; then
	exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $tmux_running ]] || ! has_session "$selected_name"; then
	tmux new-session -d -s "$selected_name" -c "$selected"
	tmux_init "$selected_name" "$selected"
fi

switch_to "$selected_name"
